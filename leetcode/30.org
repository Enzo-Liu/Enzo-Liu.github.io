#+TITLE:       30. Substring with Concatenation of All Words
#+AUTHOR:      enzo liu
#+EMAIL:       liuenze6516@gmail.com
#+DATE:        2016-10-16
#+URI:         /leetcode/30
#+KEYWORDS:    leetcode, ruby
#+TAGS:        leetcode, ruby
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: leetcode

* 题目

[[https://leetcode.com/problems/substring-with-concatenation-of-all-words/][链接]]

#+BEGIN_VERSE
You are given a string, s, and a list of words, words, that are all of the same length. Find all starting indices of substring(s) in s that is a concatenation of each word in words exactly once and without any intervening characters.

For example, given:
s: "barfoothefoobarman"
words: ["foo", "bar"]

You should return the indices: [0,9].
(order does not matter).
#+END_VERSE

* 思路


* 代码

#+BEGIN_SRC ruby
# @param {String} s
# @param {String[]} words
# @return {Integer[]}
def find_substring(s, words)

end
#+END_SRC
