<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
  <channel>
    <title>enzo&#39;s note book</title>
    <link>http://blog.enzotech.in/</link>
    <description>sketch for random ideas</description>
    <pubDate>Wed, 03 Feb 2016 15:32:52 HKT</pubDate>
    <lastBuildDate>Wed, 03 Feb 2016 15:32:52 HKT</lastBuildDate>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>Org-page static site generator (https://github.com/kelvinh/org-page)</generator>
    <item>
      <title>用org-page尝试写点东西</title>
      <link>http://blog.enzotech.in/blog/2016/01/11/用org-page尝试写点东西/</link>
      <description><![CDATA[<div>
<div class="post">
<h1>用org-page尝试写点东西</h1>

<div id="outline-container-orgheadline1" class="outline-2">
<h2 id="orgheadline1">背景</h2>
<div class="outline-text-2" id="text-orgheadline1">
<p>
近段时间一直喜欢自己用 <code>org-mode</code> 写点东西。业务上的文档，个人的笔记等。
</p>

<p>
没有深入的了解过 <span class="underline">publish</span> 在 <code>org-mode</code> 中怎么使用，正巧遇到了 <a href="https://github.com/kelvinh/org-page"><code>org-page</code></a>, 上手很容易，就准备把自己之前的小blog给推了，用它来记录点东西。
</p>
</div>
</div>

<div id="outline-container-orgheadline2" class="outline-2">
<h2 id="orgheadline2">安装</h2>
<div class="outline-text-2" id="text-orgheadline2">
<p>
如文档上所说，使用 <code>melpa</code> 可以很容易就安装成功。 略微配置一下文件夹地址，哪些文件夹不要发布到网站上，使用的 <code>branch</code> 的名称即可。
</p>
</div>
</div>

<div id="outline-container-orgheadline3" class="outline-2">
<h2 id="orgheadline3">迁移</h2>
<div class="outline-text-2" id="text-orgheadline3">
<p>
虽然过去的 <code>blog</code> 写的很幼稚， 但是还有有一点 <del>历史</del> 意义的。
</p>

<p>
使用 <code>haskell</code> 写的 <code>pandoc</code> 就是文档转换界的一把金光闪闪的瑞士军刀。
</p>

<div class="org-src-container">

<pre class="src src-bash">find . -name \*.md -type f -exec pandoc  -f markdown -t org -o {}.org {} \;
</pre>
</div>

<p>
一行搞定, 然后手动加一些 <code>org-page</code> 需要的 <code>header</code> 就可以了。
</p>
</div>
</div>

<div id="outline-container-orgheadline4" class="outline-2">
<h2 id="orgheadline4">github pages</h2>
<div class="outline-text-2" id="text-orgheadline4">
<p>
原先就是使用 <code>jekyll</code> 托管在 <code>github page</code> 上， 现在只需要把 <code>master</code> 分支的文件替换成 <code>org-page</code> 生成的文件就可以了。
</p>

<div class="org-src-container">

<pre class="src src-bash">git checkout master
find . -name \* | grep -v ".git" | xargs rm -rf
git add . &amp;&amp; git commit -m “clear all"
git checkout source
</pre>
</div>

<p>
然后在 <code>emacs</code> 里执行
</p>
<div class="org-src-container">

<pre class="src src-emacs-lisp">(op/do-publication 'y 'n 'n 'n)
</pre>
</div>

<p>
That's done.
</p>
</div>
</div>

</div>
</div>]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2016/01/11/用org-page尝试写点东西/</guid>
    </item>
    <item>
      <title>Global Day Of Code Retreat</title>
      <link>http://blog.enzotech.in/blog/2013/12/17/global-day-of-code-retreat/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2013/12/17/global-day-of-code-retreat/</guid>
    </item>
    <item>
      <title>Rails 初探</title>
      <link>http://blog.enzotech.in/blog/2013/12/20/rails-初探/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2013/12/20/rails-初探/</guid>
    </item>
    <item>
      <title>ruby的http请求小脚本</title>
      <link>http://blog.enzotech.in/blog/2013/12/31/ruby的http请求小脚本/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2013/12/31/ruby的http请求小脚本/</guid>
    </item>
    <item>
      <title>&lt;改变未来的算法&gt; 笔记</title>
      <link>http://blog.enzotech.in/blog/2014/09/07/&lt;改变未来的算法&gt;-笔记/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2014/09/07/&lt;改变未来的算法&gt;-笔记/</guid>
    </item>
    <item>
      <title>common-lisp 分享笔记</title>
      <link>http://blog.enzotech.in/blog/2014/11/05/common-lisp-分享笔记/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2014/11/05/common-lisp-分享笔记/</guid>
    </item>
    <item>
      <title>sicp 第一章习题</title>
      <link>http://blog.enzotech.in/blog/2014/11/30/sicp-第一章习题/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2014/11/30/sicp-第一章习题/</guid>
    </item>
    <item>
      <title>Lisp 模拟 Assembler</title>
      <link>http://blog.enzotech.in/blog/2014/12/25/lisp-模拟-assembler/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2014/12/25/lisp-模拟-assembler/</guid>
    </item>
    <item>
      <title>爱上haskell</title>
      <link>http://blog.enzotech.in/blog/2015/02/14/爱上haskell/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2015/02/14/爱上haskell/</guid>
    </item>
    <item>
      <title>尝试理解Y-combinator</title>
      <link>http://blog.enzotech.in/blog/2015/03/20/尝试理解y-combinator/</link>
      <description><![CDATA[]]></description>
      <pubDate>2016-02-03</pubDate>
      <guid>http://blog.enzotech.in/blog/2015/03/20/尝试理解y-combinator/</guid>
    </item>
  </channel>
</rss>